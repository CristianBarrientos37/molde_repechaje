

** Objetivo:

Desarrollar un sitio web dinámico y responsivo que facilite la gestión de recursos
humanos, donde podrán ingresar empleados y registrar sus horas de trabajo. Esta
plataforma ofrecerá una experiencia de usuario fluida y adaptable en diversos dispositivos,
garantizando que los usuarios puedan interactuar de manera intuitiva y accesible.



Requerimientos funcionales del sistema:

* Frontend Responsivo:
  - 	Crear un frontend que se adapte a varios dispositivos (móviles, tabletas,escritorios).

  - 	Implementar un diseño intuitivo que facilite la navegación y las interacciones de los usuarios.

* Modelo de Datos:
 	- Usuarios:
 		1 .Cada usuario tiene un identificador único, un nombre completo, un correo electrónico y una contraseña. Los 		usuarios pueden ser de tipo “administrador”, “empleado” o “gerente”.

 	- Empleados:

		1. Cada empleado tiene un identificador único, un nombre completo,
		una fecha de nacimiento, un puesto, una fecha de contratación y un
		identificador de usuario asociado.
 	- Horarios:
		1 Cada horario tiene un identificador único, un nombre, una
		descripción y un conjunto de horas de trabajo asociadas a
		empleados específicos.

* Funcionalidades:

	- La página de inicio es pública y accesible para todos, con información
	general y enlaces a otras secciones. Los usuarios no autenticados pueden
	ver la página de inicio y deben iniciar sesión para acceder a otras
	funcionalidades. Los usuarios autenticados acceden a su panel de control,
	donde pueden ver y gestionar información relacionada con los empleados y
	horarios.

	- Usuarios:

		1 Los administradores pueden gestionar usuarios, empleados y
		horarios.

		2 Los gerentes pueden gestionar empleados y horarios.

		3 Los empleados pueden ver su propio horario.

	- Página de Empleados (/empleados):

		1 Muestra una lista de empleados con opciones para agregar, editar y eliminar.

    	- Página de Horarios (/horarios):
		1 Muestra una lista de horarios con opciones para agregar, editar y eliminar.
* Datos semilla:
	- Se solicita la creación de datos semilla para las tablas de la base de datos
	del proyecto. Estos datos pueden estar incluidos dentro del archivo
	“seeds.rb”.

--------------------------------------
** Flowchart:

        	     Start
          	       ↓
    		  Authenticated?
      		 		↓    		
    				No      	 
    				↓        	 
  		       	   Login   
    		       ↑   ↓
		       	   ↑  Are you registered?
       		       ↑   ↓ 		 ↓
          	       ↑   No	 	Yes
    		       ↑   /       	 ↓
		      	Register       User Type
               
          		┌───────────────┴───────────────┐
  		Administrator      Manager         Employee
       		    ↓              ↓               ↓
		Manage Users,     Manage Employees    View Schedule
		Employees, and    and Schedules             ↓
   		Schedules                           	Schedule ID
       		 /       \         			 
      Add Employee      Add Schedule

-----------------------------------------------------

** Sitemap:
	1. Home
		* Login
		* Register
		* Employees
			- Employee ID
			- New Employee
		* Schedules
			- Schedule ID
			- New Schedule

** Data Model:
	*Schedules Table (horarios)
		id (int)
		name (varchar)
		description (text)
		work_hours (int)
		employee_id (int)
	*Employees Table (empleados)
		id (int)
		name (varchar)
		birth_date (date)
		position (varchar)
		hire_date (date)
		user_id (int)

	*Users Table (usuarios)
		id (int)
		name (varchar)
		email (varchar)
		password (varchar)
		user_type (varchar)
------------------------------------

** Requerimientos no funcionales:
	* Nombre de la carpeta del proyecto
		- gestion_recursos_humanos
	* Tecnologías Frontend:
		- HTML
		- CSS
		- Bootstrap
		- JavaScript
		- jQuery
	* Tecnologías Backend:
		- Ruby on Rails
		- Librerías o Gemas
		- Devise (para autenticación)
		- Kaminari (para paginación)
	* Base de Datos:
		- PostgreSQL
		- Configura el archivo “database” con la base de datos PostgreSQL.
		- Configura los servicios necesarios para interactuar con los modelos.
		- El modelo de datos propuesto es sólo referencial y no implica que las columnas deben tener esos 		nombres exactos.
	* Organización del Código:
		- Mantener separada la lógica de conexión a la base de datos en un archivo.
		- Mantener separadas las consultas a la base de datos.
		- Mantener separada la lógica del servidor.

	* Vistas:
		- Los diseños de las vistas propuestas 	en la prueba son opcionales, siéntete
		libre de modificarlas según tu preferencia, siempre que cumplan con los
		principios responsivos y que se vea de 	forma coherente

README.md:
	* Archivo "README.md" con las siguientes secciones:
		- Nombre del Proyecto: Sistema de Gestión de Recursos Humanos.
		- Descripción del Proyecto: Utiliza el párrafo de objetivos.
		- Capturas de Pantalla del Proyecto: Incluir capturas de pantalla de
		las siguientes vistas:
			1 home
			2 login
			3 empleado/nuevo
			4 empleados
			5 empleado/id
		- Prerrequisitos o Dependencias a Instalar.
		- Instalación del Proyecto.
		- Comando para Ejecutar el Proyecto.
		- Comando para cargar la Base de Datos o Migrar los Modelos.
		- Comando para cargar los Datos Semilla a la Base de Datos.
		- Credenciales de acceso según Tipo de Usuario luego de cargar los
		datos semilla:
			1 Para Usuario Tipo Administrador:
				- Email: administrador@mail.com
				- Contraseña: Abc123#
			2 Para Usuario Tipo Usuario:
				- Email: usuario@mail.com
				- Contraseña: Abc123#


